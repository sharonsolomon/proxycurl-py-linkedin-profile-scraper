{
  "endpoint": {
    "/proxycurl/api/linkedin/school": {
      "method": "GET",
      "title": "School Profile Endpoint",
      "docstring": "Cost: 1 credit / successful request.\nGet structured data of a LinkedIn School Profile",
      "result_class": "LinkedinSchool",
      "url_params": {
        "url": {
          "required": true,
          "description": "\n    URL of the LinkedIn School Profile to crawl.\n\n    URL should be in the format of `https://www.linkedin.com/school/<public_identifier>`\n    ",
          "example": "https://www.linkedin.com/school/national-university-of-singapore"
        },
        "use_cache": {
          "required": false,
          "description": "`if-present` The default behavior. Fetches profile from cache regardless of age of profile. If profile is not available in cache, API will attempt to source profile externally.\n\n`if-recent` API will make a best effort to return a fresh profile no older than 29 days.Costs an extra `1` credit on top of the cost of the base endpoint.",
          "example": "if-present"
        }
      }
    },
    "/proxycurl/api/linkedin/company": {
      "method": "GET",
      "title": "Company Profile Endpoint",
      "docstring": "Cost: 1 credit / successful request.\nGet structured data of a Company Profile",
      "result_class": "LinkedinCompany",
      "url_params": {
        "resolve_numeric_id": {
          "required": false,
          "description": "\n    Enable support for Company Profile URLs with numerical IDs that you most frequently fetch from Sales Navigator.\n    We achieve this by resolving numerical IDs into vanity IDs with cached company profiles from [LinkDB](https://nubela.co/proxycurl/linkdb).\n    For example, we will turn `https://www.linkedin.com/company/1234567890` to `https://www.linkedin.com/company/acme-corp` -- for which the API endpoint only supports the latter.\n\n    This parameter accepts the following values:\n    - `false` - Will not resolve numerical IDs.\n    - `true` (default value) - Enable support for Company Profile URLs with numerical IDs.\n    Costs an extra `2` credit on top of the base cost of the endpoint.\n    ",
          "example": "true"
        },
        "categories": {
          "required": false,
          "description": "\n    Appends categories data of this company.\n\n    Default value is `\"exclude\"`.\n    The other acceptable value is `\"include\"`, which will include these categories (if available) for `1` extra credit.\n    ",
          "example": "include"
        },
        "funding_data": {
          "required": false,
          "description": "\n    Returns a list of funding rounds that this company has received.\n\n    Default value is `\"exclude\"`.\n    The other acceptable value is `\"include\"`, which will include these categories (if available) for `1` extra credit.\n    ",
          "example": "include"
        },
        "extra": {
          "required": false,
          "description": "\n    Enriches the Company Profile with extra details from external sources.\n    Details include Crunchbase ranking, contact email, phone number, Facebook account, Twitter account, funding rounds and amount, IPO status, investor information, etc.\n\n    Default value is `\"exclude\"`.\n    The other acceptable value is `\"include\"`, which will include these extra details (if available) for `1` extra credit.\n    ",
          "example": "include"
        },
        "exit_data": {
          "required": false,
          "description": "\n    Returns a list of investment portfolio exits.\n\n    Default value is `\"exclude\"`.\n    The other acceptable value is `\"include\"`, which will include these categories (if available) for `1` extra credit.\n    ",
          "example": "include"
        },
        "acquisitions": {
          "required": false,
          "description": "\n    Provides further enriched data on acquisitions made by this company from external sources.\n\n    Default value is `\"exclude\"`.\n    The other acceptable value is `\"include\"`, which will include these acquisition data (if available) for `1` extra credit.\n    ",
          "example": "include"
        },
        "url": {
          "required": true,
          "description": "\n    URL of the LinkedIn Company Profile to crawl.\n\n    URL should be in the format of `https://www.linkedin.com/company/<public_identifier>`\n    ",
          "example": "https://www.linkedin.com/company/google/"
        },
        "use_cache": {
          "required": false,
          "description": "`if-present` The default behavior. Fetches profile from cache regardless of age of profile. If profile is not available in cache, API will attempt to source profile externally.\n\n`if-recent` API will make a best effort to return a fresh profile no older than 29 days.Costs an extra `1` credit on top of the cost of the base endpoint.",
          "example": "if-present"
        }
      }
    },
    "/proxycurl/api/v2/linkedin": {
      "method": "GET",
      "title": "Person Profile Endpoint",
      "docstring": "Cost: 1 credit / successful request.\nGet structured data of a Personal Profile",
      "result_class": "PersonEndpointResponse",
      "url_params": {
        "extra": {
          "required": false,
          "description": "\n                    Enriches the Person Profile with extra details from external sources.\n                    Extra details include gender, birth date, industry and interests.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide extra data field.\n                    - `include` - Append extra data to the person profile object.\n                    Costs an extra `1` credit on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "github_profile_id": {
          "required": false,
          "description": "\n                    Enriches the Person Profile with Github Id from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide Github Id data field.\n                    - `include` - Append Github Id data to the person profile object.\n                    Costs an extra `1` credit on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "facebook_profile_id": {
          "required": false,
          "description": "\n                    Enriches the Person Profile with Facebook Id from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide Facebook Id data field.\n                    - `include` - Append Facebook Id data to the person profile object.\n                    Costs an extra `1` credit on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "twitter_profile_id": {
          "required": false,
          "description": "\n                    Enriches the Person Profile with Twitter Id from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide Twitter Id data field.\n                    - `include` - Append Twitter Id data to the person profile object.\n                    Costs an extra `1` credit on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "personal_contact_number": {
          "required": false,
          "description": "\n                    Enriches the Person Profile with personal numbers from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide personal numbers data field.\n                    - `include` - Append personal numbers data to the person profile object.\n                    Costs an extra `1` credit per email returned on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "personal_email": {
          "required": false,
          "description": "\n                    Enriches the Person Profile with personal emails from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide personal emails data field.\n                    - `include` - Append personal emails data to the person profile object.\n                    Costs an extra `1` credit per email returned on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "inferred_salary": {
          "required": false,
          "description": "\n                    Include inferred salary range from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide inferred salary data field.\n                    - `include` - Append inferred salary range data to the person profile object.\n                    Costs an extra `1` credit on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "skills": {
          "required": false,
          "description": "\n                    Include skills data from external sources.\n\n                    This parameter accepts the following values:\n                    - `exclude` (default value) - Does not provide skills data field.\n                    - `include` - Append skills data to the person profile object.\n                    Costs an extra `1` credit on top of the cost of the base endpoint (if data is available).\n                    ",
          "example": "include"
        },
        "use_cache": {
          "required": false,
          "description": "\n                    `if-present` The default behavior.\n                    Fetches profile from cache regardless of age of profile.\n                    If profile is not available in cache, API will attempt to source profile externally.\n\n                    `if-recent` API will make a best effort to return a fresh profile no older than 29 days.\"\n                    Costs an extra `1` credit on top of the cost of the base endpoint.\n                    ",
          "example": "if-present"
        },
        "fallback_to_cache": {
          "required": false,
          "description": "\n                    Tweaks the fallback behavior if an error arises from fetching a fresh profile.\n\n                    This parameter accepts the following values:\n                    * `on-error` (default value) - Fallback to reading the profile from cache if an error arises.\n                    * `never` - Do not ever read profile from cache.\n                    ",
          "example": "on-error"
        },
        "twitter_profile_url": {
          "required": false,
          "description": "\n                    The Twitter Profile URL from which you wish to extract person profile\n\n                    URL should be in the format of `https://twitter.com/<public-identifier>`\n                    \nyes (Include only one of: `linkedin_profile_url`, `twitter_profile_url`, or `facebook_profile_url`)",
          "example": "https://twitter.com/johnrmarty/"
        },
        "facebook_profile_url": {
          "required": false,
          "description": "\n                    The Facebook Profile URL from which you wish to extract person profile\n\n                    URL should be in the format of `https://facebook.com/<public-identifier>`\n                    \nyes (Include only one of: `linkedin_profile_url`, `twitter_profile_url`, or `facebook_profile_url`)",
          "example": "https://facebook.com/johnrmarty/"
        },
        "linkedin_profile_url": {
          "required": false,
          "description": "\n                    The LinkedIn Profile URL from which you wish to extract person profile\n\n                    URL should be in the format of `https://linkedin.com/in/<public-identifier>`\n                    \nyes (Include only one of: `linkedin_profile_url`, `twitter_profile_url`, or `facebook_profile_url`)",
          "example": "https://linkedin.com/in/johnrmarty/"
        }
      }
    },
    "/proxycurl/api/customers": {
      "method": "GET",
      "title": "Customer Listing Endpoint",
      "docstring": "Cost: 10 credits / result for users on an annual subscription or Enterprise plan.\nGet a list of probable corporate customers of a target company.",
      "result_class": "CustomerList",
      "url_params": {
        "linkedin_company_profile_url": {
          "required": false,
          "description": "\n                The LinkedIn Profile URL of the company from which you want to get a list of customers of.\n\n                URL should be in the format of `https://www.linkedin.com/company/<public-identifier>`\n                \n\n                Yes (Include only one of: `linkedin_company_profile_url` or `twitter_profile_url`)\n                ",
          "example": "https://www.linkedin.com/company/apple"
        },
        "twitter_profile_url": {
          "required": false,
          "description": "\n                The Twitter/X Profile URL belonging to the company that you want to get a list of customers of.\n\n                URL should be in the format of `https://x.com/<public-identifier>`\n                \n\n                Yes (Include only one of: `linkedin_company_profile_url` or `twitter_profile_url`)\n                ",
          "example": "https://x.com/apple"
        },
        "page_size": {
          "required": false,
          "description": "\n                Limit the maximum results of customer companies returned per API call.\n\n                The default value of this parameter is 10.\n\n                Accepted values for this parameter is an integer ranging from 0 to 1000.\n                ",
          "example": "10"
        }
      }
    },
    "/proxycurl/api/v2/search/company": {
      "method": "GET",
      "title": "Company Search Endpoint",
      "docstring": "Cost: 35 credits / successful request base charge.\nSearch for companies that meet a set of criteria within\n    our exhaustive dataset of company profiles.\n\n    This API endpoint is powered by [LinkDB](https://nubela.co/proxycurl/linkdb), our exhaustive dataset of company profiles.\n\n    This API endpoint can return at most of 10,000 results per search.",
      "result_class": "CompanySearchResult",
      "url_params": {
        "public_identifier_not_in_list": {
          "required": false,
          "description": "\n    A list of public identifiers (the identifying portion of the company\u2019s profile URL).\n    The target company\u2019s identifier must **not** be a member of this list.\n    ",
          "example": "stripe,amazon"
        },
        "public_identifier_in_list": {
          "required": false,
          "description": "\n    A list of public identifiers (the identifying portion of the company\u2019s profile URL).\n    The target company\u2019s identifier must be a member of this list.\n    ",
          "example": "stripe,amazon"
        },
        "enrich_profiles": {
          "required": false,
          "description": "\n    Get the company's complete profile data rather than just the URLs to their LinkedIn profiles.\n\n    Each request respond with a streaming response of profiles.\n\n    The valid values are:\n\n    - skip (default): lists company's profile url\n    - enrich: include company's profile data in the list\n\n    Calling this API endpoint with this parameter would add 1 credit per result returned.\n    ",
          "example": "enrich"
        },
        "page_size": {
          "required": false,
          "description": "\n    Tune the maximum results returned per API call.\n\n    The default value of this parameter is 100.\n\n    Accepted values for this parameter is an integer ranging from 1 to 100.\n\n    When `enrich_profiles=enrich`, this parameter accepts value ranging from `1` to `10`.\n    ",
          "example": "10"
        },
        "funding_raised_before": {
          "required": false,
          "description": "\n    Filter companies that have raised funding **before** this date.\n    ",
          "example": "2019-12-30"
        },
        "funding_raised_after": {
          "required": false,
          "description": "\n    Filter companies that have raised funding **after** this date.\n    ",
          "example": "2019-12-30"
        },
        "funding_amount_min": {
          "required": false,
          "description": "\n    Filter companies that have raised **at least** this much (USD) funding amount.\n    ",
          "example": "1000000"
        },
        "funding_amount_max": {
          "required": false,
          "description": "\n    Filter companies that have raised **at most** this much (USD) funding amount.\n    ",
          "example": "1000000"
        },
        "founded_before_year": {
          "required": false,
          "description": "\n    Filter companies that were founded **before** this year.\n    ",
          "example": "1999"
        },
        "founded_after_year": {
          "required": false,
          "description": "\n    Filter companies that were founded **after** this year.\n    ",
          "example": "1999"
        },
        "description": {
          "required": false,
          "description": "\n    Filter companies with a description matching the provided regular expression.\n\n    The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n    The default value of this parameter is null.\n    ",
          "example": "(?i)medical device"
        },
        "employee_count_min": {
          "required": false,
          "description": "\n    Filter companies with **at least** this many employees.\n    ",
          "example": "1000"
        },
        "employee_count_max": {
          "required": false,
          "description": "\n    Filter companies with **at most** this many employees.\n    ",
          "example": "1000"
        },
        "industry": {
          "required": false,
          "description": "\n    Use this parameter to filter companies belonging to an `industry` that matches the provided regular expression. The `industry` attribute, found in a LinkedIn Company profile, describes the industry in which the company operates. The value of this attribute is an enumerator. [This CSV file provides an exhaustive list of possible values for this attribute](https://drive.google.com/file/d/12yvYLuru7CRv3wKOIkHs5Ldocz31gJSS/view?usp=share_link).\n\n    The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n    ",
          "example": "(?i)^(higher )?education$"
        },
        "name": {
          "required": false,
          "description": "\n    Filter companies with a name matching the provided regular expression.\n\n    The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n    The default value of this parameter is null.\n    ",
          "example": "Technology"
        },
        "follower_count_max": {
          "required": false,
          "description": "\n    Filter companies with a LinkedIn follower count **less than** this value.\n    ",
          "example": "1000"
        },
        "follower_count_min": {
          "required": false,
          "description": "\n    Filter companies with a LinkedIn follower count **more than** this value.\n    ",
          "example": "1000"
        },
        "type": {
          "required": false,
          "description": "\n    Filter companies of the provided LinkedIn type.\n\n    Possible values:\n\n    * `EDUCATIONAL`: Educational Institution\n    * `GOVERNMENT_AGENCY`: Government Agency\n    * `NON_PROFIT` : Nonprofit\n    * `PARTNERSHIP` : Partnership\n    * `PRIVATELY_HELD` : Privately Held\n    * `PUBLIC_COMPANY` : Public Company\n    * `SELF_EMPLOYED` : Self-Employed\n    * `SELF_OWNED` : Sole Proprietorship\n    ",
          "example": "NON_PROFIT"
        },
        "city": {
          "required": false,
          "description": "\n    Filter companies based in cities matching the provided regular expression.\n\n    The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n    The default value of this parameter is null.\n    ",
          "example": "Seattle|Los Angeles"
        },
        "region": {
          "required": false,
          "description": "\n    Filter companies based in regions matching the provided regular expression.\n    A \u201cregion\u201d in this context means \u201cstate,\u201d \u201cprovince,\u201d or similar political division, depending on what country you\u2019re querying.\n\n    The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n    The default value of this parameter is null.\n    ",
          "example": "United States"
        },
        "country": {
          "required": false,
          "description": "\n    Filter companies with an office based in this country.\n\n    This parameter accepts a case-insensitive [Alpha-2 ISO3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n    ",
          "example": "us"
        }
      }
    },
    "/proxycurl/api/linkedin/company/employees": {
      "method": "GET",
      "title": "Employee Listing Endpoint",
      "docstring": "Cost: 3 credits / employee returned.\nGet a list of employees of a Company.\n\nThis API endpoint is powered by [LinkDB](https://nubela.co/proxycurl/linkdb), our comprehensive dataset of people and company profiles.",
      "result_class": "EmployeeList",
      "url_params": {
        "country": {
          "required": false,
          "description": "\n    Limit the result set to the country locality of the profile. For example, set the parameter of `country=us` if you only want profiles from the US. Or you can set the parameter to `country=us,sg` if you want employees from both the US and Singapore.\n\n    This parameter accepts a comma-separated case-insensitive values of [Alpha-2 ISO3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n\n    Costs an extra `3` credit per result returned.\n    ",
          "example": "us"
        },
        "enrich_profiles": {
          "required": false,
          "description": "\n    Get the full profile of employees instead of only their profile urls.\n\n    Each request respond with a streaming response of profiles.\n\n    The valid values are:\n    \n    * `skip` (default): lists employee's profile url\n    * `enrich`: lists full profile of employees\n\n    Calling this API endpoint with this parameter would add `1` credit per employee returned.\n    ",
          "example": "enrich"
        },
        "role_search": {
          "required": false,
          "description": "\n    Filter employees by their title by matching the employee's title against a *regular expression*.\n\n    The default value of this parameter is `null`.\n\n    The accepted value for this parameter is a **case-insensitive** regular expression.\n\n    (The base cost of calling this API endpoint with this parameter would be `10` credits.\n    Each employee matched and returned would cost `6` credits per employee returned.)\n    ",
          "example": "(co)?-?founder"
        },
        "page_size": {
          "required": false,
          "description": "\n    Limit the maximum results returned per API call.\n\n    The default value of this parameter is `10`.\n\n    Accepted values for this parameter is an integer ranging from `1` to `200000`.\n\n    When `enrich_profiles=enrich`, this parameter accepts value ranging from `1` to `10` and the default value is `10`.\n    ",
          "example": "10"
        },
        "employment_status": {
          "required": false,
          "description": "\n    Parameter to tell the API to return past or current employees.\n\n    Valid values are `current`, `past`, and `all`:\n\n    * `current` (default) : lists current employees\n    * `past` : lists past employees\n    * `all` : lists current & past employees\n    ",
          "example": "current"
        },
        "sort_by": {
          "required": false,
          "description": "\n    Sort employees by recency.\n\n    Valid values are:\n    * `recently-joined` - Sort employees by their join date. The most recent employee is on the top of the list.\n    * `recently-left` - Sort employees by their departure date. The most recent employee who had just left is on the top of this list.\n    * `oldest` - Returns the oldest employees first. The oldest employee who had joined this company historically is on the top of this list.\n    * `none` - The default value. Do not sort.\n\n    If this parameter is supplied with a value other than `none`, will add `50` credits to the base cost of the API endpoint regardless number of results returned. It will also add an additional cost of `10` credits per employee returned.\n    ",
          "example": "recently-joined"
        },
        "resolve_numeric_id": {
          "required": false,
          "description": "\n    Enable support for Company Profile URLs with numerical IDs that you most frequently fetch from Sales Navigator. \n    We achieve this by resolving numerical IDs into vanity IDs with cached company profiles from [LinkDB](https://nubela.co/proxycurl/linkdb). \n    For example, we will turn `https://www.linkedin.com/company/1234567890` to `https://www.linkedin.com/company/acme-corp` -- for which the API endpoint only supports the latter.\n    \n    This parameter accepts the following values:\n    - `false` (default value) - Will not resolve numerical IDs.\n    - `true` - Enable support for Company Profile URLs with numerical IDs. \n    Costs an extra `2` credit on top of the base cost of the endpoint.\n    ",
          "example": "false"
        },
        "url": {
          "required": true,
          "description": "\n    URL of the LinkedIn Company Profile to target.\n\n    URL should be in the format of `https://www.linkedin.com/company/<public_identifier>`\n    ",
          "example": "https://www.linkedin.com/company/microsoft"
        }
      }
    },
    "/proxycurl/api/linkedin/company/employees/count": {
      "method": "GET",
      "title": "Employee Count Endpoint",
      "docstring": "Cost: 1 credit / successful request.\nGet a number of total employees of a Company.\n\nGet an employee count of this company from various sources.",
      "result_class": "EmployeeCount",
      "url_params": {
        "use_cache": {
          "required": false,
          "description": "\n    `if-present`: The default behavior. Fetches data from LinkDB cache regardless of age of profile.\n\n    `if-recent`: API will make a best effort to return a fresh data no older than 29 days. Costs an extra 1 credit on top of the cost of the base endpoint.\n    ",
          "example": "if-present"
        },
        "linkedin_employee_count": {
          "required": false,
          "description": "\n    Option to include a scraped employee count value from the target company's LinkedIn profile.\n\n    Valid values are `include` and `exclude`:\n\n    * `exclude` (default) : To exclude the scraped employee count.\n    * `include` : To include the scraped employee count.\n\n    Costs an extra `1` credit on top of the base cost of the endpoint.\n    ",
          "example": "include"
        },
        "employment_status": {
          "required": false,
          "description": "\n    Parameter to tell the API to filter past or current employees.\n\n    Valid values are `current`, `past`, and `all`:\n\n    * `current` (default) : count current employees\n    * `past` : count past employees\n    * `all` : count current & past employees\n    ",
          "example": "current"
        },
        "url": {
          "required": true,
          "description": "\n    URL of the LinkedIn Company Profile to target.\n\n    URL should be in the format of `https://www.linkedin.com/company/<public_identifier>`\n    ",
          "example": "https://www.linkedin.com/company/apple/"
        }
      }
    },
    "/proxycurl/api/linkedin/person/profile-picture": {
      "method": "GET",
      "title": "Person Profile Picture Endpoint",
      "docstring": "Cost: 0 credit / successful request.\nGet the profile picture of a person.\n\nProfile pictures are served from cached people profiles found within [LinkDB](https://nubela.co/proxycurl/linkdb).\nIf the profile does not exist within [LinkDB](https://nubela.co/proxycurl/linkdb), then the API will return a `404` status code.",
      "result_class": "ProfilePicture",
      "url_params": {
        "linkedin_person_profile_url": {
          "required": true,
          "description": "\n    LinkedIn Profile URL of the person that you are trying to get the profile picture of.\n    ",
          "example": "https://www.linkedin.com/in/williamhgates/"
        }
      }
    },
    "/proxycurl/api/linkedin/company/profile-picture": {
      "method": "GET",
      "title": "Company Profile Picture Endpoint",
      "docstring": "Cost: 0 credit / successful request.\nGet the profile picture of a company.\n\nProfile pictures are served from cached company profiles found within [LinkDB](https://nubela.co/proxycurl/linkdb).\nIf the profile does not exist within [LinkDB](https://nubela.co/proxycurl/linkdb), then the API will return a `404` status code.",
      "result_class": "ProfilePicture",
      "url_params": {
        "linkedin_company_profile_url": {
          "required": true,
          "description": "\n    LinkedIn Profile URL of the company that you are trying to get the profile picture of.\n    ",
          "example": "https://www.linkedin.com/company/apple/"
        }
      }
    },
    "/proxycurl/api/linkedin/profile/resolve": {
      "method": "GET",
      "title": "Person Lookup Endpoint",
      "docstring": "Cost: 2 credits / successful request.\nLook up a person with a name and company information.",
      "result_class": "PersonLookupUrlEnrichResult",
      "url_params": {
        "similarity_checks": {
          "required": false,
          "description": "\n    Controls whether the API endpoint performs\n    similarity comparisons between the input parameters\n    and the results or simply returns the closest match.\n    For instance, if you are searching for a person named\n    \"Ben Chad\", and the closest result we have is \"Chavvy\n    Plum\", our similarity checks will discard the obviously\n    incorrect result and return `null` instead of a false\n    positive.\n\n    Include similarity checks to eliminate false positives.\n    However, be aware that this might yield fewer results\n    as false positives are discarded. Credits will still be\n    deducted even if we return `null`.\n\n    You can choose to skip similarity checks, in which\n    case no credits will be charged if we return `null`.\n\n    This parameter accepts the following values:\n    * `include` (default) - Perform similarity checks and\n    discard false positives. Credits will be deducted even\n    if we return null .\n    * `skip` - Bypass similarity checks. No credits will be\n    deducted if no results are returned.\n    ",
          "example": "include"
        },
        "enrich_profile": {
          "required": false,
          "description": "\n    Enrich the result with a cached profile of the lookup result.\n\n    The valid values are:\n\n    * `skip` (default): do not enrich the results with cached profile data\n    * `enrich`: enriches the result with cached profile data\n\n    Calling this API endpoint with this parameter would add 1 credit.\n    \n    If you require [fresh profile data](https://nubela.co/blog/how-fresh-are-profiles-returned-by-proxycurl-api/),\n    please chain this API call with the [People Profile Endpoint](https://nubela.co/proxycurl/docs#people-api-person-profile-endpoint) with the `use_cache=if-recent` parameter.\n    ",
          "example": "enrich"
        },
        "company_domain": {
          "required": true,
          "description": "Company name or domain",
          "example": "gatesfoundation.org"
        },
        "location": {
          "required": false,
          "description": "\n    The location of this user.\n\n    Name of country, city or state.\n    ",
          "example": "Seattle"
        },
        "title": {
          "required": false,
          "description": "Title that user is holding at his/her current job",
          "example": "Co-chair"
        },
        "last_name": {
          "required": false,
          "description": "Last name of the user",
          "example": "Gates"
        },
        "first_name": {
          "required": true,
          "description": "First name of the user",
          "example": "Bill"
        }
      }
    },
    "/proxycurl/api/v2/linkedin/company/job": {
      "method": "GET",
      "title": "Job Search Endpoint",
      "docstring": "Cost: 2 credits / successful request.\nList jobs posted by a company on LinkedIn",
      "result_class": "JobListPage",
      "url_params": {
        "job_type": {
          "required": false,
          "description": "\n    The nature of the job.\n    It accepts the following 7 case-insensitive values only:\n    - `full-time`\n    - `part-time`\n    - `contract`\n    - `internship`\n    - `temporary`\n    - `volunteer`\n    - `anything` (default)\n    ",
          "example": "anything"
        },
        "experience_level": {
          "required": false,
          "description": "\n    The experience level needed for the job.\n    It accepts the following 6 case-insensitive values only:\n    - `internship`\n    - `entry_level`\n    - `associate`\n    - `mid_senior_level`\n    - `director`\n    - `anything` (default)\n    ",
          "example": "entry_level"
        },
        "when": {
          "required": false,
          "description": "\n    The time when the job is posted,\n    It accepts the following case-insensitive values only:\n    - `yesterday`\n    - `past-week`\n    - `past-month`\n    - `anytime` (default)\n    ",
          "example": "past-month"
        },
        "flexibility": {
          "required": false,
          "description": "\n    The flexibility of the job.\n    It accepts the following 3 case insensitive values only:\n    - `remote`\n    - `on-site`\n    - `hybrid`\n    - `anything` (default)\n    ",
          "example": "remote"
        },
        "geo_id": {
          "required": false,
          "description": "\n    The `geo_id` of the location to search for.\n    For example, `92000000` is the `geo_id` of world wide.\n\n    See [this article](https://nubela.co/blog/how-to-fetch-geo_id-parameter-for-the-job-api/?utm_source=blog&utm_medium=web&utm_campaign=docs-redirect-to-geo_id-article) as to how you may be able to match regions to `geo_id` input values.\n    ",
          "example": "92000000"
        },
        "keyword": {
          "required": false,
          "description": "\n    The keyword to search for.\n    ",
          "example": "software engineer"
        },
        "search_id": {
          "required": false,
          "description": "\n    The `search_id` of the company on LinkedIn.\n    You can get the `search_id` of a LinkedIn company via\n    [Company Profile API](#company-api-company-profile-endpoint).\n    ",
          "example": "1035"
        }
      }
    },
    "/proxycurl/api/v2/linkedin/company/job/count": {
      "method": "GET",
      "title": "Jobs Listing Count Endpoint",
      "docstring": "Cost: 2 credits / successful request.\nCount number of jobs posted by a company on LinkedIn",
      "result_class": "JobListCount",
      "url_params": {
        "job_type": {
          "required": false,
          "description": "\n    The nature of the job.\n    It accepts the following 7 case-insensitive values only:\n    - `full-time`\n    - `part-time`\n    - `contract`\n    - `internship`\n    - `temporary`\n    - `volunteer`\n    - `anything` (default)\n    ",
          "example": "entry_level"
        },
        "experience_level": {
          "required": false,
          "description": "\n    The experience level needed for the job.\n    It accepts the following 6 case-insensitive values only:\n    - `internship`\n    - `entry_level`\n    - `associate`\n    - `mid_senior_level`\n    - `director`\n    - `anything` (default)\n    ",
          "example": "entry_level"
        },
        "when": {
          "required": false,
          "description": "\n    The time when the job is posted,\n    It accepts the following case-insensitive values only:\n    - `yesterday`\n    - `past-week`\n    - `past-month`\n    - `anytime` (default)\n    ",
          "example": "past-month"
        },
        "flexibility": {
          "required": false,
          "description": "\n    The flexibility of the job.\n    It accepts the following 3 case insensitive values only:\n    - `remote`\n    - `on-site`\n    - `hybrid`\n    - `anything` (default)\n    ",
          "example": "remote"
        },
        "geo_id": {
          "required": false,
          "description": "\n    The `geo_id` of the location to search for.\n    For example, `92000000` is the `geo_id` of world wide.\n\n    See [this article](https://nubela.co/blog/how-to-fetch-geo_id-parameter-for-the-job-api/?utm_source=blog&utm_medium=web&utm_campaign=docs-redirect-to-geo_id-article) as to how you may be able to match regions to `geo_id` input values.\n    ",
          "example": "92000000"
        },
        "keyword": {
          "required": false,
          "description": "\n    The keyword to search for.\n    ",
          "example": "software engineer"
        },
        "search_id": {
          "required": false,
          "description": "\n    The `search_id` of the company on LinkedIn.\n    You can get the `search_id` of a LinkedIn company via\n    [Company Profile API](#company-api-company-profile-endpoint).\n    ",
          "example": "1035"
        }
      }
    },
    "/proxycurl/api/find/company/role": {
      "method": "GET",
      "title": "Role Lookup Endpoint",
      "docstring": "Cost: 3 credits / successful request.\nReturns the profile of a person who most closely matches a specified role\nin a company. For instance, it can be used to identify the \"CTO\" of\n\"Apple\". The endpoint yields a single result that represents the closest\nmatch. For a detailed comparison between this API endpoint and the\n[Employee Search Endpoint](#company-api-employee-search-endpoint)\nor the [Person Search Endpoint](#search-api-person-search-endpoint),\nrefer to [this article](\n    https://nubela.co/blog/what-is-the-difference-between-the-person-search-endpoint-role-lookup-endpoint-and-the-employee-search-endpoint).",
      "result_class": "RoleSearchEnrichedResult",
      "url_params": {
        "enrich_profile": {
          "required": false,
          "description": "\n    Enrich the result with a cached profile of the lookup result.\n\n    The valid values are:\n\n    * `skip` (default): do not enrich the results with cached profile data\n    * `enrich`: enriches the result with cached profile data\n\n    Calling this API endpoint with this parameter would add 1 credit.\n\n    If you require [fresh profile data](https://nubela.co/blog/how-fresh-are-profiles-returned-by-proxycurl-api/),\n    please chain this API call with the [Person Profile Endpoint](#people-api-person-profile-endpoint) with the `use_cache=if-recent` parameter.\n    ",
          "example": "enrich"
        },
        "role": {
          "required": true,
          "description": "Role of the profile that you are lookin up",
          "example": "ceo"
        },
        "company_name": {
          "required": true,
          "description": "Name of the company that you are searching for",
          "example": "nubela"
        }
      }
    },
    "/proxycurl/api/linkedin/company/resolve": {
      "method": "GET",
      "title": "Company Lookup Endpoint",
      "docstring": "Cost: 2 credits / successful request.\nResolve Company LinkedIn Profile from company name,\n    domain name and location.",
      "result_class": "CompanyUrlEnrichResult",
      "url_params": {
        "company_location": {
          "required": false,
          "description": "\n    The location / region of company.\n    ISO 3166-1 alpha-2 codes\n    ",
          "example": "sg"
        },
        "company_domain": {
          "required": false,
          "description": "Company website or Company domain\nRequires either `company_domain` or `company_name`",
          "example": "accenture.com"
        },
        "company_name": {
          "required": false,
          "description": "Company Name\nRequires either `company_domain` or `company_name`",
          "example": "Accenture"
        },
        "enrich_profile": {
          "required": false,
          "description": "\n    Enrich the result with a cached profile of the lookup result.\n\n    The valid values are:\n\n    * `skip` (default): do not enrich the results with cached profile data\n    * `enrich`: enriches the result with cached profile data\n\n    Calling this API endpoint with this parameter would add 1 credit.\n\n    If you require [fresh profile data](https://nubela.co/blog/how-fresh-are-profiles-returned-by-proxycurl-api/),\n    please chain this API call with the [Company Profile Endpoint](https://nubela.co/proxycurl/docs#company-api-company-profile-endpoint) with the `use_cache=if-recent` parameter.\n    ",
          "example": "enrich"
        }
      }
    },
    "/proxycurl/api/linkedin/company/employee/search": {
      "method": "GET",
      "title": "Employee Search Endpoint",
      "docstring": "Cost: 10 credits / successful request.\nSearch employees of a target by their job title. This API endpoint is syntactic\nsugar for the role_search parameter under the [Employee Listing Endpoint](#company-api-employee-listing-endpoint).\nThis API endpoint is powered by [LinkDB](https://nubela.co/proxycurl/linkdb), our comprehensive dataset of people\nand company profiles. For a detailed comparison between this API endpoint\nand the [Role Lookup Endpoint](#people-api-role-lookup-endpoint) or the [Person Search Endpoint](#search-api-person-search-endpoint), refer to [this article](https://nubela.co/blog/what-is-the-difference-between-the-person-search-endpoint-role-lookup-endpoint-and-the-employee-search-endpoint).",
      "result_class": "EmployeeList",
      "url_params": {
        "page_size": {
          "required": false,
          "description": "\n    Tune the maximum results returned per API call.\n    The default value of this parameter is `200000`.\n    Accepted values for this parameter is an integer ranging from `1` to `200000`.\n    When `enrich_profiles=enrich`, this parameter accepts value ranging from `1` to `10` and the default value is `100`.\n    ",
          "example": "10"
        },
        "linkedin_company_profile_url": {
          "required": true,
          "description": "\n    LinkedIn Profile URL of the target company.\n    ",
          "example": "https://www.linkedin.com/company/microsoft/"
        },
        "keyword_regex": {
          "required": true,
          "description": "\n    Job title keyword to search for in regular expression format.\n\n    The accepted value for this parameter is a **case-insensitive** regular expression.\n    ",
          "example": "ceo|cto"
        },
        "country": {
          "required": false,
          "description": "\n    Limit the result set to the country locality of the profile. For example, set the parameter of `country=us` if you only want profiles from the US.\n\n    This parameter accepts a case-insensitive [Alpha-2 ISO3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n\n    Costs an extra `3` credit per result returned.\n    ",
          "example": "us"
        },
        "enrich_profiles": {
          "required": false,
          "description": "\n    Get the full profile of employees instead of only their profile urls.\n\n    Each request respond with a streaming response of profiles.\n\n    The valid values are:\n    \n    * `skip` (default): lists employee's profile url\n    * `enrich`: lists full profile of employees\n\n    Calling this API endpoint with this parameter would add `1` credit per employee returned.\n    ",
          "example": "enrich"
        },
        "resolve_numeric_id": {
          "required": false,
          "description": "\n    Enable support for Company Profile URLs with numerical IDs that you most frequently fetch from Sales Navigator. \n    We achieve this by resolving numerical IDs into vanity IDs with cached company profiles from [LinkDB](https://nubela.co/proxycurl/linkdb). \n    For example, we will turn `https://www.linkedin.com/company/1234567890` to `https://www.linkedin.com/company/acme-corp` -- for which the API endpoint only supports the latter.\n    \n    This parameter accepts the following values:\n    - `false` (default value) - Will not resolve numerical IDs.\n    - `true` - Enable support for Company Profile URLs with numerical IDs. \n    Costs an extra `2` credit on top of the base cost of the endpoint.\n    ",
          "example": "false"
        }
      }
    },
    "/proxycurl/api/linkedin/school/students": {
      "method": "GET",
      "title": "Student Listing Endpoint",
      "docstring": "Cost: 3 credits / student returned.\nGet a list of students of a school or university.",
      "result_class": "StudentList",
      "url_params": {
        "country": {
          "required": false,
          "description": "\n    Limit the result set to the country locality of the profile. For example, set the parameter of `country=us` if you only want profiles from the US.\n\n    This parameter accepts a case-insensitive [Alpha-2 ISO3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n\n    Costs an extra `3` credit per result returned.\n    ",
          "example": "us"
        },
        "enrich_profiles": {
          "required": false,
          "description": "\n    Get the full profile of students instead of only their profile urls.\n\n    Each request respond with a streaming response of profiles.\n\n    The valid values are:\n    \n    * `skip` (default): lists student's profile url\n    * `enrich`: lists full profile of students\n\n    *Calling this API endpoint with this parameter would add `1` credit per student returned.*\n    ",
          "example": "enrich"
        },
        "search_keyword": {
          "required": false,
          "description": "\n    Filter students by their major by matching the student's major against a *regular expression*.\n\n    The default value of this parameter is `null`.\n\n    The accepted value for this parameter is a **case-insensitive** regular expression.\n\n    (The base cost of calling this API endpoint with this parameter would be `10` credits.\n    Each student matched and returned would cost `6` credits per student returned.)\n    ",
          "example": "computer*|cs"
        },
        "page_size": {
          "required": false,
          "description": "\n    Limit the maximum results returned per API call.\n\n    The default value of this parameter is `10`.\n\n    Accepted values for this parameter is an integer ranging from `1` to `200000`.\n\n    When `enrich_profiles=enrich`, this parameter accepts value ranging from `1` to `10` and the default value is `10`.\n    ",
          "example": "10"
        },
        "student_status": {
          "required": false,
          "description": "\n    Parameter to tell the API to return past or current students.\n\n    Valid values are `current`, `past`, and `all`:\n\n    * `current` (default) : lists current students\n    * `past` : lists past students\n    * `all` : lists current & past students\n    ",
          "example": "current"
        },
        "sort_by": {
          "required": false,
          "description": "\n    Sort students by matriculation or graduation dates.\n\n    Valid values are:\n    * `recently-matriculated` - Sort students by their matriculation date. Students who had had most recently started school is on the top of the list.\n    * `recently-graduated` - Sort students by their graduation date. The most recently graduated student is on the top of this list.\n    * `none` - The default value. Do not sort.\n\n    If this parameter is supplied with a value other than `none`, will add `50` credits to the base cost of the API endpoint regardless number of results returned. It will also add an additional cost of `10` credits per student returned.\n    ",
          "example": "recently-matriculated"
        },
        "resolve_numeric_id": {
          "required": false,
          "description": "\n    Enable support for School Profile URLs with numerical IDs that you most frequently fetch from Sales Navigator. \n    We achieve this by resolving numerical IDs into vanity IDs with cached company profiles from [LinkDB](https://nubela.co/proxycurl/linkdb). \n    For example, we will turn `https://www.linkedin.com/school/1234567890` to `https://www.linkedin.com/school/acme-corp` -- for which the API endpoint only supports the latter.\n    \n    This parameter accepts the following values:\n    - `false` (default value) - Will not resolve numerical IDs.\n    - `true` - Enable support for School Profile URLs with numerical IDs. \n    Costs an extra `2` credit on top of the base cost of the endpoint.\n    ",
          "example": "false"
        },
        "linkedin_school_url": {
          "required": true,
          "description": "\n    URL of the LinkedIn School Profile to target.\n\n    URL should be in the format of `https://www.linkedin.com/school/<public_identifier>`\n    ",
          "example": "https://www.linkedin.com/school/stanford-university"
        }
      }
    },
    "/proxycurl/api/linkedin/profile/resolve/email": {
      "method": "GET",
      "title": "Reverse Email Lookup Endpoint",
      "docstring": "Cost: 3 credits / successful request.\nResolve social media profiles correlated from an email address.\nThis API endpoint works with both personal and work emails.",
      "result_class": "ReverseEmailUrlEnrichResult",
      "url_params": {
        "enrich_profile": {
          "required": false,
          "description": "\n    Enrich the result with a cached LinkedIn profile of the LinkedIn Profile URL result (if any).\n    \n    Valid values are:\n\n    * `skip` (default): do not enrich the results with cached profile data.\n    * `enrich`: enriches the result with cached profile data. \n    \n    Calling this API endpoint with this parameter would add `1` additional credit.\n    \n    If you require [fresh profile data](https://nubela.co/blog/how-fresh-are-profiles-returned-by-proxycurl-api/),  please chain this API call with the `linkedin_profile_url` result with the [Person Profile Endpoint](https://nubela.co/proxycurl/docs#people-api-person-profile-endpoint) with the `use_cache=if-recent` parameter.\n    ",
          "example": "enrich"
        },
        "lookup_depth": {
          "required": true,
          "description": "\n    This parameter describes the depth options for our API lookup function. This endpoint can execute either a superficial or a deep lookup.\n    \n    A **superficial lookup** involves comparing the provided email with entries in our database. This approach tends to yield fewer results and is typically less effective for work-related email addresses. However, it does not consume any credits if no results are returned.\n    \n    On the other hand, a **deep lookup** extends beyond our database to utilize advanced heuristics and identify the individual associated with a given email. This method is particularly recommended for work emails.\n    \n    Please note the following valid values for the depth of the lookup:\n\n    * `superficial`: No credits are consumed if no results are found.\n    * `deep` (default): Credits are used regardless of whether any results are returned.\n    ",
          "example": "deep"
        },
        "email": {
          "required": true,
          "description": "Email address of the user you want to look up.",
          "example": "danial@nubela.co"
        }
      }
    },
    "/proxycurl/api/resolve/phone": {
      "method": "GET",
      "title": "Reverse Contact Number Lookup Endpoint",
      "docstring": "Cost: 3 credits / successful request.\nFind social media profiles from a contact phone number.",
      "result_class": "ReverseContactNumberResult",
      "url_params": {
        "phone_number": {
          "required": true,
          "description": "[E.164 formatted](https://www.twilio.com/docs/glossary/what-e164) phone number of the person you want to identify social media profiles of.",
          "example": "+14155552671"
        }
      }
    },
    "/proxycurl/api/linkedin/profile/email": {
      "method": "GET",
      "title": "Work Email Lookup Endpoint",
      "docstring": "Cost: 3 credits / request.\nLookup work email address of a LinkedIn Person Profile.\n\nEmail addresses returned are verified to not be role-based or catch-all emails. Email addresses\nreturned by our API endpoint come with a 95+% deliverability guarantee\n\n**Endpoint behavior**\n\n*This endpoint* **_may not_** *return results immediately.*\n\nIf you provided a webhook in your request parameter, our application will call your webhook with\nthe result once. See `Webhook request` below.",
      "result_class": "ExtractionEmailResult",
      "url_params": {
        "linkedin_profile_url": {
          "required": true,
          "description": "\n    Linkedin Profile URL of the person you want to\n    extract work email address from.\n    ",
          "example": "https://sg.linkedin.com/in/williamhgates"
        },
        "callback_url": {
          "required": false,
          "description": "\n    Webhook to notify your application when\n    the request has finished processing.\n    ",
          "example": "https://webhook.site/29e12f17-d5a2-400a-9d08-42ee9d83600a"
        }
      }
    },
    "/proxycurl/api/v2/search/person": {
      "method": "GET",
      "title": "Person Search Endpoint",
      "docstring": "Cost: 35 credits / successful request base charge.\nSearch for people who meet a set of criteria within our exhaustive dataset of people profiles.\n\nThis API endpoint is powered by [LinkDB](https://nubela.co/proxycurl/linkdb), our exhaustive dataset of people and company profiles.\n\nThis API endpoint can return at most 10,000 results per search.",
      "result_class": "PersonSearchResult",
      "url_params": {
        "country": {
          "required": true,
          "description": "\n                Filter people located in this country.\n                This parameter accepts a case-insensitive [Alpha-2 ISO3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n                ",
          "example": "US"
        },
        "first_name": {
          "required": false,
          "description": "\n                Filter people whose first names match the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "Sarah?"
        },
        "last_name": {
          "required": false,
          "description": "\n                Filter people whose last names match the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "Jackson|Johnson"
        },
        "education_field_of_study": {
          "required": false,
          "description": "\n                Filter people with a field of study matching the provided regular expression, based on education history.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "(?i)computer science"
        },
        "education_degree_name": {
          "required": false,
          "description": "\n                Filter people who earned a degree matching the provided regular expression, based on education history.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "\\bMBA\\b"
        },
        "education_school_name": {
          "required": false,
          "description": "\n                Filter people who have attended a school whose name matches the provided regular expression, based on education history.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "Caltech|Massachusetts Institute of Technology"
        },
        "education_school_linkedin_profile_url": {
          "required": false,
          "description": "\n                Filter people who have attended a school with a specific LinkedIn profile URL, based on education history.\n\n                The default value of this parameter is `null`.\n                ",
          "example": "https://www.linkedin.com/school/national-university-of-singapore/"
        },
        "current_role_title": {
          "required": false,
          "description": "\n                Filter people who are **currently** working as a role whose title matches the provided regular expression. You'll be looking for profiles on [LinkDB](https://nubela.co/proxycurl/linkdb) that show a person's current job. However, keep in mind that some of these profiles may not be up-to-date, which means you might sometimes see a person's old job instead of their current job on LinkedIn.\n                \n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "(?i)founder"
        },
        "past_role_title": {
          "required": false,
          "description": "\n                Filter people who have **in the past** worked as a role whose title matches the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "(?i)founder"
        },
        "current_role_before": {
          "required": false,
          "description": "\n                Filter people who started their current role **before** this date. You'll be looking for profiles on [LinkDB](https://nubela.co/proxycurl/linkdb) that show a person's current job. However, keep in mind that some of these profiles may not be up-to-date, which means you might sometimes see a person's old job instead of their current job on LinkedIn.\n                \n                This parameter takes a ISO8601 date. Default value of this parameter is `null`.\n                ",
          "example": "2019-12-30"
        },
        "current_role_after": {
          "required": false,
          "description": "\n                Filter people who started their current role **after** this date. You'll be looking for profiles on [LinkDB](https://nubela.co/proxycurl/linkdb) that show a person's current job. However, keep in mind that some of these profiles may not be up-to-date, which means you might sometimes see a person's old job instead of their current job on LinkedIn.\n                \n                This parameter takes a ISO8601 date. Default value of this parameter is `null`.\n                ",
          "example": "2019-12-30"
        },
        "current_company_linkedin_profile_url": {
          "required": false,
          "description": "\n                Filter people who are **currently** working at a company represented by this LinkedIn Company Profile URL.\n\n                Default value of this parameter is `null`.\n                ",
          "example": "https://www.linkedin.com/company/apple"
        },
        "past_company_linkedin_profile_url": {
          "required": false,
          "description": "\n                Filter people who have **in the past** worked at the company represented by this LinkedIn Company Profile URL.\n\n                This parameter takes a LinkedIn Company Profile URL. Default value of this parameter is `null`.\n                ",
          "example": "https://www.linkedin.com/company/apple"
        },
        "current_job_description": {
          "required": false,
          "description": "\n                Filter people with **current** job descriptions matching the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "(?i)education"
        },
        "past_job_description": {
          "required": false,
          "description": "\n                Filter people with **past** job descriptions matching the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "(?i)education"
        },
        "current_company_name": {
          "required": false,
          "description": "\n                Filter people who are **currently** working at a company whose name matches the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "Stripe|Apple"
        },
        "past_company_name": {
          "required": false,
          "description": "\n                Filter people who **have previously** worked at a company whose name matches the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "Stripe|Apple"
        },
        "linkedin_groups": {
          "required": false,
          "description": "\n                Filter people who are members of LinkedIn groups whose names match the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "(?i)haskell"
        },
        "languages": {
          "required": false,
          "description": "\n                Filter people who list a language matching the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "Mandarin|Chinese"
        },
        "region": {
          "required": false,
          "description": "\n                Filter people located in a region matching the provided regular expression.\n                A \u201cregion\u201d in this context means \u201cstate,\u201d \u201cprovince,\u201d or similar political division, depending on what country you\u2019re querying.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "United States"
        },
        "city": {
          "required": false,
          "description": "\n                Filter people located in a city matching the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "Seattle|Los Angeles"
        },
        "headline": {
          "required": false,
          "description": "\n                Filter people whose LinkedIn headline fields match the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "(?i)founder"
        },
        "summary": {
          "required": false,
          "description": "\n                Filter people whose LinkedIn summary fields match the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "(?i)founder"
        },
        "industries": {
          "required": false,
          "description": "\n                Person's inferred industry. May sometimes exist when `current_company_industry` does not, but `current_company_industry` should be preferred when it exists.\n                ",
          "example": "(?i)automotive"
        },
        "interests": {
          "required": false,
          "description": "\n                Filter people whose Linkedin interest fields match the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "(?i)technology"
        },
        "skills": {
          "required": false,
          "description": "\n                Filter people whose Linkedin skill fields match the provided regular expression.\n\n                The default value of this parameter is `null`.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                ",
          "example": "(?i)accounting"
        },
        "current_company_country": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company with an office based in this country.\n\n                This parameter accepts a case-insensitive [Alpha-2 ISO3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n                ",
          "example": "us"
        },
        "current_company_region": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company based in a region matching the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                The default value of this parameter is null.\n                ",
          "example": "United States"
        },
        "current_company_city": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company based in a city matching the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                The default value of this parameter is null.\n                ",
          "example": "Seattle|Los Angeles"
        },
        "current_company_type": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company of the provided LinkedIn type.\n\n                Possible values:\n\n                * `EDUCATIONAL`: Educational Institution\n                * `GOVERNMENT_AGENCY`: Government Agency\n                * `NON_PROFIT` : Nonprofit\n                * `PARTNERSHIP` : Partnership\n                * `PRIVATELY_HELD` : Privately Held\n                * `PUBLIC_COMPANY` : Public Company\n                * `SELF_EMPLOYED` : Self-Employed\n                * `SELF_OWNED` : Sole Proprietorship\n                ",
          "example": "NON_PROFIT"
        },
        "current_company_follower_count_min": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company with a LinkedIn follower count **more than** this value.\n                ",
          "example": "1000"
        },
        "current_company_follower_count_max": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company with a LinkedIn follower count **less than** this value.\n                ",
          "example": "1000"
        },
        "current_company_industry": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company belonging to an `industry` that matches the provided regular expression. The `industry` attribute, found in a LinkedIn Company profile, describes the industry in which the company operates. The value of this attribute is an enumerator. [This CSV file provides an exhaustive list of possible values for this attribute](https://drive.google.com/file/d/12yvYLuru7CRv3wKOIkHs5Ldocz31gJSS/view?usp=share_link).\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag. The default value of this parameter is `null`.\n                ",
          "example": "(?i)^(higher )?education$"
        },
        "current_company_employee_count_min": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company with **at least** this many employees.\n                ",
          "example": "1000"
        },
        "current_company_employee_count_max": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company with **at most** this many employees.\n                ",
          "example": "1000"
        },
        "current_company_description": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company with a description matching the provided regular expression.\n\n                The accepted value for this parameter is a regular expression which is **case sensitive** by default and accepts an `(?i)` flag.\n                The default value of this parameter is null.\n                ",
          "example": "(?i)medical device"
        },
        "current_company_founded_after_year": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company that was founded **after** this year.\n                ",
          "example": "1999"
        },
        "current_company_founded_before_year": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company that was founded **before** this year.\n                ",
          "example": "1999"
        },
        "current_company_funding_amount_min": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company that has raised **at least** this much (USD) funding amount.\n                ",
          "example": "1000000"
        },
        "current_company_funding_amount_max": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company that has raised **at most** this much (USD) funding amount.\n                ",
          "example": "1000000"
        },
        "current_company_funding_raised_after": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company that has raised funding **after** this date.\n                ",
          "example": "2019-12-30"
        },
        "current_company_funding_raised_before": {
          "required": false,
          "description": "\n                Filter people who are currently working at a company that has raised funding **before** this date.\n                ",
          "example": "2019-12-30"
        },
        "public_identifier_in_list": {
          "required": false,
          "description": "\n                A list of public identifiers (the identifying portion of the person\u2019s profile URL).\n                The target person\u2019s identifier must be a member of this list.\n                ",
          "example": "williamhgates,johnrmarty"
        },
        "public_identifier_not_in_list": {
          "required": false,
          "description": "\n                A list of public identifiers (the identifying portion of the person\u2019s profile URL).\n                The target person\u2019s identifier must **not** be a member of this list.\n                ",
          "example": "williamhgates,johnrmarty"
        },
        "page_size": {
          "required": false,
          "description": "\n                Tune the maximum results returned per API call.\n\n                The default value of this parameter is `100`.\n\n                Accepted values for this parameter is an integer ranging from `1` to `100`.\n                \n                When `enrich_profiles=enrich`, this parameter accepts value ranging from `1` to `10`.\n                ",
          "example": "10"
        },
        "enrich_profiles": {
          "required": false,
          "description": "\n                Get the person's complete profile data rather than just the URLs to their LinkedIn profiles.\n\n                Each request respond with a streaming response of profiles.\n\n                The valid values are:\n\n                * `skip` (default): lists person's profile url only\n                * `enrich`: include person's profile data in the list\n\n                Calling this API endpoint with this parameter would add `1` credit per result returned.\n                ",
          "example": "enrich"
        }
      }
    },
    "/proxycurl/api/linkedin/job": {
      "method": "GET",
      "title": "Job Profile Endpoint",
      "docstring": "Cost: 2 credits / successful request.\nGet structured data of a LinkedIn Job Profile",
      "result_class": "JobProfile",
      "url_params": {
        "url": {
          "required": true,
          "description": "\n    URL of the LinkedIn Job Profile to target.\n\n    URL should be in the format of\n    `https://www.linkedin.com/jobs/view/<job_id>`.\n    [Jobs Listing Endpoint](#jobs-api-jobs-listing-endpoint)\n    can be used to retrieve a job URL.\n    ",
          "example": "https://www.linkedin.com/jobs/view/3667167926/"
        }
      }
    },
    "/proxycurl/api/credit-balance": {
      "method": "GET",
      "title": "View Credit Balance Endpoint",
      "docstring": "Cost: 0 credit / successful request.\nGet your current credit(s) balance",
      "result_class": "CreditBalance",
      "url_params": {}
    },
    "/proxycurl/api/disposable-email": {
      "method": "GET",
      "title": "Disposable Email Address Check Endpoint",
      "docstring": "Cost: 0 credit / request.\nGiven an email address, checks if the email address belongs to a disposable email service.",
      "result_class": "DisposableEmail",
      "url_params": {
        "email": {
          "required": true,
          "description": "Email address to check",
          "example": "steven@nubela.co"
        }
      }
    },
    "/proxycurl/api/contact-api/personal-contact": {
      "method": "GET",
      "title": "Personal Contact Number Lookup Endpoint",
      "docstring": "Cost: 1 credit / contact number returned.\nFind personal phone numbers associated with a given social media profile.",
      "result_class": "PersonalContactNumbers",
      "url_params": {
        "page_size": {
          "required": false,
          "description": "\n    This controls the maximum number of numbers returned per API call.\n    It's useful for limiting credit consumption as the number of numbers\n    per identity can vary. The default value is 0, meaning there's no limit\n    to the number of returned results.\n    ",
          "example": "0"
        },
        "twitter_profile_url": {
          "required": false,
          "description": "\n    The Twitter Profile URL from which you wish to extract personal\n    contact numbers\n    \n\n    Yes (Include only one of: `linkedin_profile_url`,\n    `twitter_profile_url`, or `facebook_profile_url`)\n    ",
          "example": "https://www.twitter.com/proxycurl"
        },
        "facebook_profile_url": {
          "required": false,
          "description": "\n    The Facebook Profile URL from which you wish to extract personal\n    contact numbers\n    \n\n    Yes (Include only one of: `linkedin_profile_url`,\n    `twitter_profile_url`, or `facebook_profile_url`)\n    ",
          "example": "https://www.facebook.com/zuck"
        },
        "linkedin_profile_url": {
          "required": false,
          "description": "\n    The LinkedIn Profile URL from which you wish to extract personal\n    contact numbers\n    \n\n    Yes (Include only one of: `linkedin_profile_url`,\n    `twitter_profile_url`, or `facebook_profile_url`)\n    ",
          "example": "https://linkedin.com/in/steven-goh-6738131b"
        }
      }
    },
    "/proxycurl/api/contact-api/personal-email": {
      "method": "GET",
      "title": "Personal Email Lookup Endpoint",
      "docstring": "Cost: 1 credit / email returned.\nFind personal email addresses associated with a given social media profile.",
      "result_class": "PDLEmailResult",
      "url_params": {
        "email_validation": {
          "required": false,
          "description": "\n    How to validate each email.\n    \n    Takes the following values:\n     * `none` (default) - Do not perform email validation.\n     * `fast` - Perform fast email validation (does not cost extra credit).\n     * `precise` - Perform deliverability validation (costs 1 extra credit per email found).\n\n    For backward-compatibility these are also accepted:\n     * `include` - Equivalent to `precise`\n     * `exclude` - Equivalent to `none`\n    ",
          "example": "include"
        },
        "page_size": {
          "required": false,
          "description": "This controls the maximum number of emails returned per API call. It's useful for limiting credit consumption as the number of emails per identity can vary. The default value is `0`, meaning there's no limit to the number of returned results.",
          "example": 0
        },
        "twitter_profile_url": {
          "required": false,
          "description": "The Twitter Profile URL from which you wish to extract personal email addresses.\nyes (Include only one of: `linkedin_profile_url`, `twitter_profile_url`, or `facebook_profile_url`)",
          "example": "https://www.twitter.com/proxycurl"
        },
        "facebook_profile_url": {
          "required": false,
          "description": "The Facebook Profile URL from which you wish to extract personal email addresses.\nyes (Include only one of: `linkedin_profile_url`, `twitter_profile_url`, or `facebook_profile_url`)",
          "example": "https://www.facebook.com/zuck"
        },
        "linkedin_profile_url": {
          "required": false,
          "description": "The LinkedIn Profile URL from which you wish to extract personal email addresses.\nyes (Include only one of: `linkedin_profile_url`, `twitter_profile_url`, or `facebook_profile_url`)",
          "example": "https://linkedin.com/in/steven-goh-6738131b"
        }
      }
    }
  },
  "classes": {
    "CompanyLocation": {
      "country": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "city": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "postal_code": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "line_1": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "is_hq": {
        "type": "basic",
        "value": "bool",
        "nullable": false
      },
      "state": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "SimilarCompany": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "industry": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "AffiliatedCompany": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "industry": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Date": {
      "day": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "month": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "year": {
        "type": "basic",
        "value": "int",
        "nullable": false
      }
    },
    "CompanyUpdate": {
      "article_link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "image": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "posted_on": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "text": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "total_likes": {
        "type": "basic",
        "value": "int",
        "nullable": true
      }
    },
    "LinkedinSchool": {
      "linkedin_internal_id": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "website": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "industry": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company_size": {
        "type": "tuple",
        "value": [
          "int",
          "int"
        ],
        "nullable": false
      },
      "company_size_on_linkedin": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "hq": {
        "type": "object",
        "value": "CompanyLocation",
        "nullable": true
      },
      "company_type": {
        "type": "object",
        "value": "CompanyType",
        "nullable": true
      },
      "founded_year": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "specialities": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "locations": {
        "type": "object",
        "value": "CompanyLocation",
        "nullable": false
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "tagline": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "universal_name_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile_pic_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "background_cover_image_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "search_id": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "similar_companies": {
        "type": "object",
        "value": "SimilarCompany",
        "nullable": false
      },
      "affiliated_companies": {
        "type": "object",
        "value": "AffiliatedCompany",
        "nullable": false
      },
      "updates": {
        "type": "object",
        "value": "CompanyUpdate",
        "nullable": false
      },
      "follower_count": {
        "type": "basic",
        "value": "int",
        "nullable": true
      }
    },
    "AcquiredCompany": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "crunchbase_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "announced_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "price": {
        "type": "basic",
        "value": "int",
        "nullable": true
      }
    },
    "Acquisitor": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "crunchbase_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "announced_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "price": {
        "type": "basic",
        "value": "int",
        "nullable": true
      }
    },
    "Acquisition": {
      "acquired": {
        "type": "object",
        "value": "AcquiredCompany",
        "nullable": false
      },
      "acquired_by": {
        "type": "object",
        "value": "Acquisitor",
        "nullable": true
      }
    },
    "Exit": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "crunchbase_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "CompanyDetails": {
      "crunchbase_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "ipo_status": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "crunchbase_rank": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "founding_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "operating_status": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company_type": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "contact_email": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "phone_number": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "facebook_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "twitter_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "number_of_funding_rounds": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "total_funding_amount": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "stock_symbol": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "ipo_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "number_of_lead_investors": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "number_of_investors": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "total_fund_raised": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "number_of_investments": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "number_of_lead_investments": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "number_of_exits": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "number_of_acquisitions": {
        "type": "basic",
        "value": "int",
        "nullable": true
      }
    },
    "Investor": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "type": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Funding": {
      "funding_type": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "money_raised": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "announced_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "number_of_investor": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "investor_list": {
        "type": "object",
        "value": "Investor",
        "nullable": true
      }
    },
    "LinkedinCompany": {
      "linkedin_internal_id": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "website": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "industry": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company_size": {
        "type": "tuple",
        "value": [
          "int",
          "int"
        ],
        "nullable": false
      },
      "company_size_on_linkedin": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "hq": {
        "type": "object",
        "value": "CompanyLocation",
        "nullable": true
      },
      "company_type": {
        "type": "object",
        "value": "CompanyType",
        "nullable": true
      },
      "founded_year": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "specialities": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "locations": {
        "type": "object",
        "value": "CompanyLocation",
        "nullable": false
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "tagline": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "universal_name_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile_pic_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "background_cover_image_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "search_id": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "similar_companies": {
        "type": "object",
        "value": "SimilarCompany",
        "nullable": false
      },
      "affiliated_companies": {
        "type": "object",
        "value": "AffiliatedCompany",
        "nullable": false
      },
      "updates": {
        "type": "object",
        "value": "CompanyUpdate",
        "nullable": false
      },
      "follower_count": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "acquisitions": {
        "type": "object",
        "value": "Acquisition",
        "nullable": true
      },
      "exit_data": {
        "type": "object",
        "value": "Exit",
        "nullable": true
      },
      "extra": {
        "type": "object",
        "value": "CompanyDetails",
        "nullable": true
      },
      "funding_data": {
        "type": "object",
        "value": "Funding",
        "nullable": true
      },
      "categories": {
        "type": "list",
        "value": "str",
        "nullable": true
      },
      "customer_list": {
        "type": "list",
        "value": "str",
        "nullable": true
      }
    },
    "Experience": {
      "starts_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "ends_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "company": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company_linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "logo_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Education": {
      "starts_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "ends_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "field_of_study": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "degree_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "school": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "school_linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "logo_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "grade": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "activities_and_societies": {
        "type": "basic",
        "value": "str",
        "nullable": false
      }
    },
    "AccomplishmentOrg": {
      "starts_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "ends_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "org_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Publication": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "publisher": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "published_on": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "HonourAward": {
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "issuer": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "issued_on": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Patent": {
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "issuer": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "issued_on": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "application_number": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "patent_number": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Course": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "number": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Project": {
      "starts_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "ends_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "TestScore": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "score": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "date_on": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "VolunteeringExperience": {
      "starts_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "ends_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "cause": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company_linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "logo_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Certification": {
      "starts_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "ends_at": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "license_number": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "display_source": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "authority": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "PeopleAlsoViewed": {
      "link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "summary": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Activity": {
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "activity_status": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "SimilarProfile": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "summary": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Article": {
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "link": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "published_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "author": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "image_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "PersonGroup": {
      "profile_pic_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "InferredSalary": {
      "min": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "max": {
        "type": "basic",
        "value": "float",
        "nullable": true
      }
    },
    "PersonExtra": {
      "github_profile_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "facebook_profile_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "twitter_profile_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "PersonEndpointResponse": {
      "public_identifier": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile_pic_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "background_cover_image_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "first_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "last_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "full_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "follower_count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      },
      "occupation": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "headline": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "summary": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "country": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "country_full_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "city": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "state": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "experiences": {
        "type": "object",
        "value": "Experience",
        "nullable": false
      },
      "education": {
        "type": "object",
        "value": "Education",
        "nullable": false
      },
      "languages": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "accomplishment_organisations": {
        "type": "object",
        "value": "AccomplishmentOrg",
        "nullable": false
      },
      "accomplishment_publications": {
        "type": "object",
        "value": "Publication",
        "nullable": false
      },
      "accomplishment_honors_awards": {
        "type": "object",
        "value": "HonourAward",
        "nullable": false
      },
      "accomplishment_patents": {
        "type": "object",
        "value": "Patent",
        "nullable": false
      },
      "accomplishment_courses": {
        "type": "object",
        "value": "Course",
        "nullable": false
      },
      "accomplishment_projects": {
        "type": "object",
        "value": "Project",
        "nullable": false
      },
      "accomplishment_test_scores": {
        "type": "object",
        "value": "TestScore",
        "nullable": false
      },
      "volunteer_work": {
        "type": "object",
        "value": "VolunteeringExperience",
        "nullable": false
      },
      "certifications": {
        "type": "object",
        "value": "Certification",
        "nullable": false
      },
      "connections": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "people_also_viewed": {
        "type": "object",
        "value": "PeopleAlsoViewed",
        "nullable": false
      },
      "recommendations": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "activities": {
        "type": "object",
        "value": "Activity",
        "nullable": false
      },
      "similarly_named_profiles": {
        "type": "object",
        "value": "SimilarProfile",
        "nullable": false
      },
      "articles": {
        "type": "object",
        "value": "Article",
        "nullable": false
      },
      "groups": {
        "type": "object",
        "value": "PersonGroup",
        "nullable": false
      },
      "skills": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "inferred_salary": {
        "type": "object",
        "value": "InferredSalary",
        "nullable": true
      },
      "gender": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "birth_date": {
        "type": "object",
        "value": "Date",
        "nullable": true
      },
      "industry": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "extra": {
        "type": "object",
        "value": "PersonExtra",
        "nullable": true
      },
      "interests": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "personal_emails": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "personal_numbers": {
        "type": "list",
        "value": "str",
        "nullable": false
      }
    },
    "CompanyCustomer": {
      "linkedin_company_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "twitter_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "email": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "CustomerList": {
      "companies": {
        "type": "object",
        "value": "CompanyCustomer",
        "nullable": false
      }
    },
    "CSearchResult": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "profile": {
        "type": "object",
        "value": "LinkedinCompany",
        "nullable": true
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "CompanySearchResult": {
      "results": {
        "type": "object",
        "value": "CSearchResult",
        "nullable": false
      },
      "next_page": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "total_result_count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      }
    },
    "PublicPerson": {
      "public_identifier": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile_pic_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "background_cover_image_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "first_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "last_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "full_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "follower_count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      },
      "occupation": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "headline": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "summary": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "country": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "country_full_name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "city": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "state": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "experiences": {
        "type": "object",
        "value": "Experience",
        "nullable": false
      },
      "education": {
        "type": "object",
        "value": "Education",
        "nullable": false
      },
      "languages": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "accomplishment_organisations": {
        "type": "object",
        "value": "AccomplishmentOrg",
        "nullable": false
      },
      "accomplishment_publications": {
        "type": "object",
        "value": "Publication",
        "nullable": false
      },
      "accomplishment_honors_awards": {
        "type": "object",
        "value": "HonourAward",
        "nullable": false
      },
      "accomplishment_patents": {
        "type": "object",
        "value": "Patent",
        "nullable": false
      },
      "accomplishment_courses": {
        "type": "object",
        "value": "Course",
        "nullable": false
      },
      "accomplishment_projects": {
        "type": "object",
        "value": "Project",
        "nullable": false
      },
      "accomplishment_test_scores": {
        "type": "object",
        "value": "TestScore",
        "nullable": false
      },
      "volunteer_work": {
        "type": "object",
        "value": "VolunteeringExperience",
        "nullable": false
      },
      "certifications": {
        "type": "object",
        "value": "Certification",
        "nullable": false
      },
      "connections": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "people_also_viewed": {
        "type": "object",
        "value": "PeopleAlsoViewed",
        "nullable": false
      },
      "recommendations": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "activities": {
        "type": "object",
        "value": "Activity",
        "nullable": false
      },
      "similarly_named_profiles": {
        "type": "object",
        "value": "SimilarProfile",
        "nullable": false
      },
      "articles": {
        "type": "object",
        "value": "Article",
        "nullable": false
      },
      "groups": {
        "type": "object",
        "value": "PersonGroup",
        "nullable": false
      },
      "skills": {
        "type": "list",
        "value": "str",
        "nullable": false
      }
    },
    "Employee": {
      "profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "profile": {
        "type": "object",
        "value": "PublicPerson",
        "nullable": true
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "EmployeeList": {
      "employees": {
        "type": "object",
        "value": "Employee",
        "nullable": false
      },
      "next_page": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "EmployeeCount": {
      "total_employee": {
        "type": "basic",
        "value": "int",
        "nullable": false
      },
      "linkedin_employee_count": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "linkdb_employee_count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      },
      "regression_notice": {
        "type": "basic",
        "value": "str",
        "nullable": false
      }
    },
    "ProfilePicture": {
      "tmp_profile_pic_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      }
    },
    "PersonLookupUrlEnrichResult": {
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "name_similarity_score": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "company_similarity_score": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "title_similarity_score": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "location_similarity_score": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "profile": {
        "type": "object",
        "value": "PersonEndpointResponse",
        "nullable": false
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "JobListEntry": {
      "company": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "company_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "job_title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "job_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "list_date": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "JobListPage": {
      "job": {
        "type": "object",
        "value": "JobListEntry",
        "nullable": false
      },
      "next_page_no": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "next_page_api_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "previous_page_no": {
        "type": "basic",
        "value": "int",
        "nullable": true
      },
      "previous_page_api_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "JobListCount": {
      "count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      }
    },
    "RoleSearchEnrichedResult": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile": {
        "type": "object",
        "value": "PersonEndpointResponse",
        "nullable": false
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "CompanyUrlEnrichResult": {
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile": {
        "type": "object",
        "value": "LinkedinCompany",
        "nullable": false
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "Student": {
      "profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "profile": {
        "type": "object",
        "value": "PublicPerson",
        "nullable": true
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "StudentList": {
      "students": {
        "type": "object",
        "value": "Student",
        "nullable": false
      },
      "next_page": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "ReverseEmailUrlEnrichResult": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "twitter_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "facebook_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "similarity_score": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "backwards_compatibility_notes": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "profile": {
        "type": "object",
        "value": "PersonEndpointResponse",
        "nullable": true
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "email": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "ReverseContactNumberResult": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "twitter_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "facebook_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "ExtractionEmailResult": {
      "email_queue_count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      }
    },
    "SearchResult": {
      "linkedin_profile_url": {
        "type": "basic",
        "value": "str",
        "nullable": false
      },
      "profile": {
        "type": "object",
        "value": "PublicPerson",
        "nullable": true
      },
      "last_updated": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "PersonSearchResult": {
      "results": {
        "type": "object",
        "value": "SearchResult",
        "nullable": false
      },
      "next_page": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "total_result_count": {
        "type": "basic",
        "value": "int",
        "nullable": false
      }
    },
    "JobLocation": {
      "country": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "region": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "city": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "postal_code": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "latitude": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "longitude": {
        "type": "basic",
        "value": "float",
        "nullable": true
      },
      "street": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "JobCompany": {
      "name": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "logo": {
        "type": "basic",
        "value": "str",
        "nullable": true
      }
    },
    "JobProfile": {
      "linkedin_internal_id": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "job_description": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "apply_url": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "title": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "location": {
        "type": "object",
        "value": "JobLocation",
        "nullable": false
      },
      "company": {
        "type": "object",
        "value": "JobCompany",
        "nullable": false
      },
      "seniority_level": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "industry": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "employment_type": {
        "type": "basic",
        "value": "str",
        "nullable": true
      },
      "job_functions": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "total_applicants": {
        "type": "basic",
        "value": "int",
        "nullable": true
      }
    },
    "CreditBalance": {
      "credit_balance": {
        "type": "basic",
        "value": "int",
        "nullable": false
      }
    },
    "DisposableEmail": {
      "is_disposable_email": {
        "type": "basic",
        "value": "bool",
        "nullable": false
      },
      "is_free_email": {
        "type": "basic",
        "value": "bool",
        "nullable": false
      }
    },
    "PersonalContactNumbers": {
      "numbers": {
        "type": "list",
        "value": "str",
        "nullable": false
      }
    },
    "PDLEmailResult": {
      "emails": {
        "type": "list",
        "value": "str",
        "nullable": false
      },
      "invalid_emails": {
        "type": "list",
        "value": "str",
        "nullable": false
      }
    }
  },
  "enums": {
    "CompanyType": [
      "EDUCATIONAL",
      "GOVERNMENT_AGENCY",
      "NON_PROFIT",
      "PARTNERSHIP",
      "PRIVATELY_HELD",
      "PUBLIC_COMPANY",
      "SELF_EMPLOYED",
      "SELF_OWNED"
    ]
  }
}
